basePath: /v1
definitions:
  appresult.AppError:
    properties:
      code:
        type: string
      message:
        type: string
      status:
        type: boolean
    type: object
  appresult.AppSuccess:
    properties:
      code:
        type: string
      data: {}
      message:
        type: string
      status:
        type: boolean
    type: object
  users.DataDTO:
    properties:
      count:
        type: integer
      users:
        items:
          $ref: '#/definitions/users.UserDTO'
        type: array
    type: object
  users.PaginationDTO:
    properties:
      limit:
        type: integer
      page:
        type: integer
    type: object
  users.ReqIdDTO:
    properties:
      Id:
        type: integer
    type: object
  users.ReqUser:
    properties:
      Id:
        type: integer
      name:
        type: string
      patronymic:
        type: string
      surname:
        type: string
    required:
    - name
    - surname
    type: object
  users.UserDTO:
    properties:
      Id:
        type: integer
      age:
        type: integer
      country: {}
      createdAt:
        type: string
      gender:
        type: string
      name:
        type: string
      patronymic:
        type: string
      probability:
        type: number
      surname:
        type: string
    type: object
host: localhost:8082
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: Testing Swagger APIs.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Users APIs
  version: "1.0"
paths:
  /users/add:
    post:
      consumes:
      - application/json
      description: create and update data  user
      parameters:
      - description: Create and Update JSON
        in: body
        name: users
        required: true
        schema:
          $ref: '#/definitions/users.ReqUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      tags:
      - users
  /users/delete:
    post:
      consumes:
      - application/json
      description: delete data  user
      parameters:
      - description: Delete JSON
        in: body
        name: users
        required: true
        schema:
          $ref: '#/definitions/users.ReqIdDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      tags:
      - users
  /users/get-all:
    post:
      consumes:
      - application/json
      description: all data users
      parameters:
      - description: Get All JSON
        in: body
        name: users
        required: true
        schema:
          $ref: '#/definitions/users.PaginationDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/users.DataDTO'
            type: array
      tags:
      - users
swagger: "2.0"
